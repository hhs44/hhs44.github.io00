<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Huanghs blog</title>
    <link>https://hhs44.github.io/blog/</link>
    <description>Recent content in Blogs on Huanghs blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 14 May 2020 18:46:42 +0800</lastBuildDate>
    
	<atom:link href="https://hhs44.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git实践</title>
      <link>https://hhs44.github.io/blog/git%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Thu, 14 May 2020 18:46:42 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/git%E5%AE%9E%E8%B7%B5/</guid>
      <description>常用命令 # 新建本地git仓库时，初始化本地，此时文件夹中会多出一个.git文件 git init # 提交 文件到暂存区 使用.可以上传所有文件，*可以进行匹配 # 跟踪文件 ，change to be commited ：下的文件即处于暂存状态 # git add *.txt # 提交到git仓库，并清空暂存区 git commit -m ‘message’ # 克隆仓库 git clone https/git # 检查当前文件状态 git status git status -s # 查看修改的地方 git diff # 查看已暂存的将要添加到下次提交里的内容 对比最后一次要提交文件的差异 git diff --staged /--cached # 从暂存区移除文件 # rm 删除文件，git rm 记录这个删除 git rm Git的三种状态和三个阶段： 三个状态：
 已提交（committed）  表示数据已经安全的保存在本地数据库中。
 已修改（modified）  表示修改了文件，但是还没保存到数据库中
 已暂存（staged）  表示对一个已修改的文件当前版本做了标记，使之包含在下次提交的快照中。</description>
    </item>
    
    <item>
      <title>CSS学习一</title>
      <link>https://hhs44.github.io/blog/css%E5%AD%A6%E4%B9%A0%E4%B8%80/</link>
      <pubDate>Tue, 31 Mar 2020 11:46:11 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/css%E5%AD%A6%E4%B9%A0%E4%B8%80/</guid>
      <description></description>
    </item>
    
    <item>
      <title>HTML学习一</title>
      <link>https://hhs44.github.io/blog/html%E5%AD%A6%E4%B9%A0%E4%B8%80/</link>
      <pubDate>Tue, 31 Mar 2020 11:45:46 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/html%E5%AD%A6%E4%B9%A0%E4%B8%80/</guid>
      <description></description>
    </item>
    
    <item>
      <title>web基础</title>
      <link>https://hhs44.github.io/blog/web%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 31 Mar 2020 11:45:23 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/web%E5%9F%BA%E7%A1%80/</guid>
      <description>web前端了解篇 web前端是由网页制作演变而来，现在随着互联网的快速发展，前端不只是尽显于图片和文字的静态展示，还需要完成于用户的交互，以及各种功能的集合。
[TOC]
1web前端的主要结构  结构层  指的就是HTML,使用网页标签对代码里的普通文本进行标注，不同的标签显示不同的含义，从而构建整个HTML文档的结构。   表现层  指的是CSS,使用CSS样式来控制HTML标签，例如设置标签的版式、颜色、大小等外观，让整个HTML界面变得更加美观，便于欣赏。   行为层  指的是JavaScript,简称JS. 使用HTML标签可以搭建一个网页的结构，使用CSS可以将HTML文档里的结构更加的美观，但是此时的网页是一个完全静态的，无法实现和用户的交互。使用JS可以实现页面和用户的交互。    2前端开发的核心技术  HTML语言  HTML是一种标记语言，用来结构化我们的网页内容并赋予内容含义，例如定义段落、标题和数据表，或在页面中嵌入图片和视频。
 CSS  CSS 是一种样式规则语言，可将样式应用于 HTML 内容， 例如设置背景颜色和字体，在多个列中布局内容。
 JavaScript  JavaScript 是一种脚本语言，可以用来创建动态更新的内容，控制多媒体，制作图像动画，还有很多。（好吧，虽然它不是万能的，但可以通过简短的代码来实现神奇的功能。）
3前端优化   尽量减少HTTP请求 (Make Fewer HTTP Requests)
  减少DNS 查找 (Reduce DNS Lookups)
  避免重定向 (Avoid Redirects)
  使得 Ajax 可缓存 (Make Ajax Cacheable)
  延迟载入组件 (Post-load Components)</description>
    </item>
    
    <item>
      <title>JavaScript学习（一）</title>
      <link>https://hhs44.github.io/blog/javascript%E5%AD%A6%E4%B9%A0%E4%B8%80/</link>
      <pubDate>Tue, 31 Mar 2020 11:37:07 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/javascript%E5%AD%A6%E4%B9%A0%E4%B8%80/</guid>
      <description>JavaScript的学习回顾 再次认识JavaScript 一般来说，完整的JavaScript包括：
 ECMAScript，描述了该语言的语法和基本对象 文档对象模型（DOM），描述处理页面内容的方法和接口 浏览器对象模型（BOM），描述于浏览器进行交互的方法和接口  JavaScript的基本特点如下：
 是一种解释性脚本语言（代码不进行预编译）。 主要用来向HTML页面添加交互行为。 可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。  JavaScript常用来完成以下任务：
 嵌入动态文本于HTML页面 对浏览器事件作出响应 读写HTML元素 在数据被提交到服务器之前验证数据 检测访客的浏览器信息 控制cookies，包括创建和修改等  JavaScript的应用程序接口（API） api是什么 API 是已经建立好的一套代码组件，可以让开发者实现原本很难甚至无法实现的程序。就像现成的家具套件之于家居建设，用一些已经切好的木板组装一个书柜，显然比自己设计，寻找合适的木材，裁切至合适的尺寸和形状，找到正确尺寸的螺钉，再组装成书柜要简单得多。
API通常分两种：
  浏览器api
它内建于web浏览器中，它们可以将数据从周边计算机环境中筛选出来，还可以做实用的复杂工作。如：
 文档对象模型API（DOM） 地理位置API（Geolocation API） 画布（Canvas）    第三方api
  Javascript的使用方式 内部JavaScript   在准备好需要添加js的html文件
  准备js代码：
  &amp;lt;script&amp;gt; //在这里编写javaScript代码 &amp;lt;/script&amp;gt;  插入代码块，在结束之前插入代码块  外部JavaScript  首先准备一个js文件，并记录可以访问这个文件的相对地址或真实地址。 在html文件中将&amp;lt;script&amp;gt;替换为：  &amp;lt;script src=&amp;#34;xxx.js&amp;#34; async&amp;gt;&amp;lt;/script&amp;gt; 内联JavaScript处理器 需要使用内联的处理器
Javascript中的常见错误 JavaScript的运行次序 当浏览器执行一段js代码时时按照从上往下 的顺序执行这段代码的，所以需要在代码书写时注意书写的顺序以及使用的对象是否在上面以及执行的代码中进行了定义。</description>
    </item>
    
    <item>
      <title>老知识迁移（一）</title>
      <link>https://hhs44.github.io/blog/%E8%80%81%E7%9F%A5%E8%AF%86%E8%BF%81%E7%A7%BB%E4%B8%80/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hhs44.github.io/blog/%E8%80%81%E7%9F%A5%E8%AF%86%E8%BF%81%E7%A7%BB%E4%B8%80/</guid>
      <description>&lt;p&gt;有前端基础，mysql基础，django基础。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>老知识迁移（二）</title>
      <link>https://hhs44.github.io/blog/%E8%80%81%E7%9F%A5%E8%AF%86%E8%BF%81%E7%A7%BB%E4%BA%8C/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hhs44.github.io/blog/%E8%80%81%E7%9F%A5%E8%AF%86%E8%BF%81%E7%A7%BB%E4%BA%8C/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ubuntu_图形界面系统修复</title>
      <link>https://hhs44.github.io/blog/ubuntu-%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E7%B3%BB%E7%BB%9F%E4%BF%AE%E5%A4%8D/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/ubuntu-%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E7%B3%BB%E7%BB%9F%E4%BF%AE%E5%A4%8D/</guid>
      <description>&lt;h1 id=&#34;ubuntu错误修改系统配置文件&#34;&gt;ubuntu错误修改系统配置文件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;问题描述：&lt;/p&gt;
&lt;p&gt;各种无法开机，无法进入图形界面，或者各种修复方法失效，这是一个不错的尝试。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>测试理论</title>
      <link>https://hhs44.github.io/blog/2020-03-14%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/</link>
      <pubDate>Sat, 14 Mar 2020 23:14:42 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/2020-03-14%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA/</guid>
      <description></description>
    </item>
    
    <item>
      <title>系统管理和自动化运维(网络篇)</title>
      <link>https://hhs44.github.io/blog/2020-03-13-python-linux%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%92%8C%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E4%B8%80/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/2020-03-13-python-linux%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%92%8C%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E4%B8%80/</guid>
      <description>&lt;p&gt;python的应用领域已经是众所周知的非常广泛，那么在网络上它是怎么大展神通的呢。&lt;/p&gt;
&lt;p&gt;本次主要会介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用python列出网络上活跃的所有主机。&lt;/li&gt;
&lt;li&gt;python中的端口扫描工具&lt;/li&gt;
&lt;li&gt;进行ip管理&lt;/li&gt;
&lt;li&gt;一个DNS工具包&lt;/li&gt;
&lt;li&gt;网络嗅探&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Markdown For Typora</title>
      <link>https://hhs44.github.io/blog/markdown-reference-/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hhs44.github.io/blog/markdown-reference-/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt;是由&lt;a href=&#34;http://daringfireball.net/&#34;&gt;Daring Fireball&lt;/a&gt;创建的;最初的指导原则是&lt;a href=&#34;http://daringfireball.net/projects/markdown/syntax&#34;&gt;这里&lt;/a&gt;。但是，它的语法在不同的解析器或编辑器之间是不同的。&lt;strong&gt;Typora&lt;/strong&gt;正在使用[GitHub调味降价][GFM]。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python3 正则表达式</title>
      <link>https://hhs44.github.io/blog/python3-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hhs44.github.io/blog/python3-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>&lt;p&gt;正则表达式是一个特殊的字符序列，它能帮助你方便的检查一个字符串是否与某种模式匹配。re 模块使 Python 语言拥有全部的正则表达式功能。&lt;/p&gt;
&lt;p&gt;首先我们以一个案例引入：&lt;/p&gt;
&lt;p&gt;用户民匹配问题：&lt;/p&gt;
&lt;p&gt;要求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户名只能包含数字 字母 下划线&amp;gt;&lt;/li&gt;
&lt;li&gt;不能以数字开头&lt;/li&gt;
&lt;li&gt;长度在 6 到 16 位范围内&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>My First Blog</title>
      <link>https://hhs44.github.io/blog/my-first-blog/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hhs44.github.io/blog/my-first-blog/</guid>
      <description>&lt;h1 id=&#34;对主题的简单了解与处理&#34;&gt;对主题的简单了解与处理&lt;/h1&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;此处使用的主题为&lt;a href=&#34;https://github.com/alanorth/hugo-theme-bootstrap4-blog&#34;&gt;hugo-theme-bootstrap4-blog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单初始化后的见面如下，其中home，about，contact的页面内容直接使用 &lt;code&gt;hugo new name.md &lt;/code&gt;即可进行内容的填充。posts则为自己自定义的文章分类。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>conda相关（一）</title>
      <link>https://hhs44.github.io/blog/conda%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 25 Dec 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/conda%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;h1 id=&#34;conda简介&#34;&gt;conda简介&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Conda 是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换。 Conda 是为 Python 程序创建的，适用于 Linux，OS X 和Windows，也可以打包和分发其他软件。&lt;/p&gt;
&lt;p&gt;Conda作为软件包管理器可以帮助您查找和安装软件包。如果您需要一个需要使用其他版本的Python的软件包，则无需切换到其他环境管理器，因为conda也是环境管理器。仅需几个命令，您就可以设置一个完全独立的环境来运行该不同版本的Python，同时继续在正常环境中运行您通常的Python版本。(来自&lt;a href=&#34;https://docs.conda.io/en/latest/&#34;&gt;官网&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Nosql学习（一）</title>
      <link>https://hhs44.github.io/blog/nosql%E5%AD%A6%E4%B9%A0%E4%B9%8Bmongodb/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/nosql%E5%AD%A6%E4%B9%A0%E4%B9%8Bmongodb/</guid>
      <description>1、NoSQL（非关系型数据库）   nosql指的是Not Only SQL ，表示不仅仅是sql。基于数据存储模型，Nosql可以分为列族型式数据存储数据库、键-值对数据库，文档型数据库，对象型数据库，图数型数据库等。各类型的数据库也有许多自己的相关产品，如：图数据库Neon4J就广泛用于知识图谱领域，文档类型数据库MongoDB广泛应用与自然语言处理领域。
  下表按照常见的NoSQL数据库方式列存储，文档存储，键值对存储等，对其数据类型、应用场景、代表数据库，以及主要特征进行总结比对。
  接下来会使用python对NoSQL数据库的操作，这选取里Mongo DB数据库
2、python操作mongoDB MongoDB是一个基于分布式文件存储的数据库，由C++编写，旨在为web应用提供可拓展的高性能数据存储解决方案。
MongoDB是一个介于关系型数据库和非关系型数据库的之间的产品，是非关系数据库中功能最丰富，最像关系型数据库的。
首先python3中使用的是Pymongo操作MongoDB，
 查看pymongo的版本  import pymongo print(pymongo.__version__) # 3.10.1  python操作MongoDB  from pymongo import MongoClient client = MongoClient(host=&amp;#39;127.0.0.1&amp;#39;,port=27017) db =client.pymongodb db #Out[6]: Database(MongoClient(host=[&amp;#39;127.0.0.1:27017&amp;#39;], document_class=dict, tz_aware=False, connect=True), &amp;#39;pymongodb&amp;#39;)  插入数据和读取数据  这里的数据是字典
#插入数据 dic ={&amp;#39;name&amp;#39;:&amp;#39;huang&amp;#39;,&amp;#39;sex&amp;#39;:&amp;#39;M&amp;#39;,&amp;#39;age&amp;#39;:25} db.pycollection.insert(dic) #读取数据 data =db.pycollection.find() #这里数据是可迭代的 for x in data: print(x) #output：{&amp;#39;_id&amp;#39;: ObjectId(&amp;#39;5e7787b15e5d088115660687&amp;#39;), &amp;#39;name&amp;#39;: &amp;#39;huang&amp;#39;, &amp;#39;sex&amp;#39;: &amp;#39;M&amp;#39;, &amp;#39;age&amp;#39;: 25} </description>
    </item>
    
    <item>
      <title>hibernate（一）简单登陆界面实现</title>
      <link>https://hhs44.github.io/blog/hibernate%E4%B8%80%E7%AE%80%E5%8D%95%E7%99%BB%E9%99%86%E7%95%8C%E9%9D%A2%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Thu, 11 Jul 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/hibernate%E4%B8%80%E7%AE%80%E5%8D%95%E7%99%BB%E9%99%86%E7%95%8C%E9%9D%A2%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;p&gt;在实训期间无聊，尝试学习一些框架的东西，正好在进行数据处理，我选择了hibernate5作为我操作数据库的框架。（以前做过ssh架构下的网站的课程设计，因为专业不对口没有深入，现在做一个简单回顾也不会深入）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ubuntu18修复（系统无法启动）</title>
      <link>https://hhs44.github.io/blog/ubuntu18%E4%BF%AE%E5%A4%8D%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/ubuntu18%E4%BF%AE%E5%A4%8D%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8/</guid>
      <description>&lt;h1 id=&#34;解决方案使用u盘启动盘进入系统安装boot-repair&#34;&gt;解决方案：使用U盘启动盘，进入系统安装boot-repair&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;问题描述：最近在工作的ubuntu系统中尝试安装了deepin桌面，在进行桌面主题设置后重启，ubuntu无法启动，开机启动失败后进入biso界面&lt;br /&gt;
环境描述：双显卡的笔记本（在进行U盘引导时需要禁用n卡，不禁用会导致各种卡死）&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>csiTool相关</title>
      <link>https://hhs44.github.io/blog/%E5%9F%BA%E4%BA%8Ewifi%E8%AE%BE%E5%A4%87csi%E4%BF%A1%E5%8F%B7%E7%9A%84%E4%BA%BA%E4%BD%93%E7%9D%A1%E7%9C%A0%E7%8A%B6%E6%80%81%E6%A3%80%E6%B5%8B-csi-tool%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%AE%89%E8%A3%85/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hhs44.github.io/blog/%E5%9F%BA%E4%BA%8Ewifi%E8%AE%BE%E5%A4%87csi%E4%BF%A1%E5%8F%B7%E7%9A%84%E4%BA%BA%E4%BD%93%E7%9D%A1%E7%9C%A0%E7%8A%B6%E6%80%81%E6%A3%80%E6%B5%8B-csi-tool%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%AE%89%E8%A3%85/</guid>
      <description>&lt;h1 id=&#34;csitool-安装及使用&#34;&gt;csitool 安装及使用&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;目录：&lt;/p&gt;
&lt;p&gt;安装构建工具，Linux开发头和Git客户端&lt;/p&gt;
&lt;p&gt;安装修改后的固件&lt;/p&gt;
&lt;p&gt;构建用户空间日志记录工具&lt;/p&gt;
&lt;p&gt;安装完成后，就可以使用CSI Tool记录CSI信号了&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>E:无法获得锁</title>
      <link>https://hhs44.github.io/blog/e-%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hhs44.github.io/blog/e-%E6%97%A0%E6%B3%95%E8%8E%B7%E5%BE%97%E9%94%81/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linuxidc.com/topicnews.aspx?tid=2&#34;&gt;Ubuntu&lt;/a&gt; 18.04，其他版的Ubuntu也一样&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;当运行sudo apt-get install/update/或其他命令时，由于各种说不清的原因有时会出现如下提示：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E: 无法获得锁 /var/lib/dpkg/lock-frontend - open (11: 资源暂时不可用)&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>PyCharm快捷键</title>
      <link>https://hhs44.github.io/blog/pycharm%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BB%A3%E7%A0%81%E7%BC%96%E8%BE%91%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/pycharm%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BB%A3%E7%A0%81%E7%BC%96%E8%BE%91%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>&lt;h1 id=&#34;代码编辑快捷键&#34;&gt;代码编辑快捷键&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>hexo优化（一）</title>
      <link>https://hhs44.github.io/blog/hexo%E4%BC%98%E5%8C%96%E4%B8%80/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/hexo%E4%BC%98%E5%8C%96%E4%B8%80/</guid>
      <description></description>
    </item>
    
    <item>
      <title>hexo与GitHub构建个人博客</title>
      <link>https://hhs44.github.io/blog/hexo%E4%B8%8Egithub%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/hexo%E4%B8%8Egithub%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;pre&gt;&lt;code&gt;目录：
1.1前言
1.2准备工作 
2.1创建GitHub仓库  
2.2环境安装  
2.3ssh key绑定
3.1hexo安装
3.2第一篇博客
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>关于错误Assetrenderfailed:css/main.css</title>
      <link>https://hhs44.github.io/blog/%E5%85%B3%E4%BA%8E%E9%94%99%E8%AF%AFassetrenderfailed-css-main-css/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/%E5%85%B3%E4%BA%8E%E9%94%99%E8%AF%AFassetrenderfailed-css-main-css/</guid>
      <description>第一次使用next主题时，对其配置文件进行更改时发生以上错误。 对修改的部分进行注释发现，在添加GitHub 和邮箱的链接后产生以上错误。 注释后错误消失，因为刚开始使用这个博客暂不开启这些功能。  </description>
    </item>
    
  </channel>
</rss>