<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基础 on Huanghs blog</title>
    <link>https://hhs44.github.io/tags/%E5%9F%BA%E7%A1%80/</link>
    <description>Recent content in 基础 on Huanghs blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 15 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hhs44.github.io/tags/%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>老知识迁移（一）</title>
      <link>https://hhs44.github.io/blog/%E8%80%81%E7%9F%A5%E8%AF%86%E8%BF%81%E7%A7%BB%E4%B8%80/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hhs44.github.io/blog/%E8%80%81%E7%9F%A5%E8%AF%86%E8%BF%81%E7%A7%BB%E4%B8%80/</guid>
      <description>&lt;p&gt;有前端基础，mysql基础，django基础。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>conda相关（一）</title>
      <link>https://hhs44.github.io/blog/conda%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 25 Dec 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/conda%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;h1 id=&#34;conda简介&#34;&gt;conda简介&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Conda 是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换。 Conda 是为 Python 程序创建的，适用于 Linux，OS X 和Windows，也可以打包和分发其他软件。&lt;/p&gt;
&lt;p&gt;Conda作为软件包管理器可以帮助您查找和安装软件包。如果您需要一个需要使用其他版本的Python的软件包，则无需切换到其他环境管理器，因为conda也是环境管理器。仅需几个命令，您就可以设置一个完全独立的环境来运行该不同版本的Python，同时继续在正常环境中运行您通常的Python版本。(来自&lt;a href=&#34;https://docs.conda.io/en/latest/&#34;&gt;官网&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Nosql学习（一）</title>
      <link>https://hhs44.github.io/blog/nosql%E5%AD%A6%E4%B9%A0%E4%B9%8Bmongodb/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/nosql%E5%AD%A6%E4%B9%A0%E4%B9%8Bmongodb/</guid>
      <description>1、NoSQL（非关系型数据库）   nosql指的是Not Only SQL ，表示不仅仅是sql。基于数据存储模型，Nosql可以分为列族型式数据存储数据库、键-值对数据库，文档型数据库，对象型数据库，图数型数据库等。各类型的数据库也有许多自己的相关产品，如：图数据库Neon4J就广泛用于知识图谱领域，文档类型数据库MongoDB广泛应用与自然语言处理领域。
  下表按照常见的NoSQL数据库方式列存储，文档存储，键值对存储等，对其数据类型、应用场景、代表数据库，以及主要特征进行总结比对。
  接下来会使用python对NoSQL数据库的操作，这选取里Mongo DB数据库
2、python操作mongoDB MongoDB是一个基于分布式文件存储的数据库，由C++编写，旨在为web应用提供可拓展的高性能数据存储解决方案。
MongoDB是一个介于关系型数据库和非关系型数据库的之间的产品，是非关系数据库中功能最丰富，最像关系型数据库的。
首先python3中使用的是Pymongo操作MongoDB，
 查看pymongo的版本  import pymongo print(pymongo.__version__) # 3.10.1  python操作MongoDB  from pymongo import MongoClient client = MongoClient(host=&amp;#39;127.0.0.1&amp;#39;,port=27017) db =client.pymongodb db #Out[6]: Database(MongoClient(host=[&amp;#39;127.0.0.1:27017&amp;#39;], document_class=dict, tz_aware=False, connect=True), &amp;#39;pymongodb&amp;#39;)  插入数据和读取数据  这里的数据是字典
#插入数据 dic ={&amp;#39;name&amp;#39;:&amp;#39;huang&amp;#39;,&amp;#39;sex&amp;#39;:&amp;#39;M&amp;#39;,&amp;#39;age&amp;#39;:25} db.pycollection.insert(dic) #读取数据 data =db.pycollection.find() #这里数据是可迭代的 for x in data: print(x) #output：{&amp;#39;_id&amp;#39;: ObjectId(&amp;#39;5e7787b15e5d088115660687&amp;#39;), &amp;#39;name&amp;#39;: &amp;#39;huang&amp;#39;, &amp;#39;sex&amp;#39;: &amp;#39;M&amp;#39;, &amp;#39;age&amp;#39;: 25} </description>
    </item>
    
    <item>
      <title>hexo与GitHub构建个人博客</title>
      <link>https://hhs44.github.io/blog/hexo%E4%B8%8Egithub%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hhs44.github.io/blog/hexo%E4%B8%8Egithub%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;pre&gt;&lt;code&gt;目录：
1.1前言
1.2准备工作 
2.1创建GitHub仓库  
2.2环境安装  
2.3ssh key绑定
3.1hexo安装
3.2第一篇博客
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>